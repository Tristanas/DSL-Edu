package Minesweeper.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Difficulty;
  private ConceptPresentation props_DifficultyRef;
  private ConceptPresentation props_EducationalGame;
  private ConceptPresentation props_LearningLevel;
  private ConceptPresentation props_Level;
  private ConceptPresentation props_LevelCollection;
  private ConceptPresentation props_LevelCollectionRef;
  private ConceptPresentation props_TestLevel;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Difficulty:
        if (props_Difficulty == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Difficulty = cpb.create();
        }
        return props_Difficulty;
      case LanguageConceptSwitch.DifficultyRef:
        if (props_DifficultyRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x8f66faecbf224d22L, 0x897476ccb51727aeL, 0x7a874f5648af8279L, 0x7a874f5648af828dL, "difficultyRef", "", "");
          props_DifficultyRef = cpb.create();
        }
        return props_DifficultyRef;
      case LanguageConceptSwitch.EducationalGame:
        if (props_EducationalGame == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_EducationalGame = cpb.create();
        }
        return props_EducationalGame;
      case LanguageConceptSwitch.LearningLevel:
        if (props_LearningLevel == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LearningLevel");
          props_LearningLevel = cpb.create();
        }
        return props_LearningLevel;
      case LanguageConceptSwitch.Level:
        if (props_Level == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Level");
          props_Level = cpb.create();
        }
        return props_Level;
      case LanguageConceptSwitch.LevelCollection:
        if (props_LevelCollection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_LevelCollection = cpb.create();
        }
        return props_LevelCollection;
      case LanguageConceptSwitch.LevelCollectionRef:
        if (props_LevelCollectionRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x8f66faecbf224d22L, 0x897476ccb51727aeL, 0x7a874f56488c1679L, 0x7a874f56488c168cL, "levelCollection", "", "");
          props_LevelCollectionRef = cpb.create();
        }
        return props_LevelCollectionRef;
      case LanguageConceptSwitch.TestLevel:
        if (props_TestLevel == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TestLevel");
          props_TestLevel = cpb.create();
        }
        return props_TestLevel;
    }
    return null;
  }
}
