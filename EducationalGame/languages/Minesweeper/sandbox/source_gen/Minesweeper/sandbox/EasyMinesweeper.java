package Minesweeper.sandbox;

/*Generated by MPS */

import javax.swing.JFrame;
import javax.swing.JLabel;
import java.util.ArrayList;
import java.awt.BorderLayout;
import java.awt.EventQueue;

public class EasyMinesweeper extends JFrame {
  private JLabel statusbar;
  public ArrayList<Question> questions;

  public EasyMinesweeper() {
    questions = new ArrayList();
    questions.add(new Question("I want those purple _______.", new String[]{"One", "Ones"}, "Ones"));
    questions.add(new Question("I like ____________.", new String[]{"grey ones", "the grey ones"}, "the grey ones"));
    questions.add(new Question("________ likes it here.", new String[]{"All", "Everyone"}, "Everyone"));
    questions.add(new Question("____ of us don't like pizza.", new String[]{"None", "Some"}, "Some"));
    questions.add(new Question("Select the pronoun that can replace the words in caps. ANA, SARAH AND I are on our way to school.", new String[]{"They", "Us", "Our", "We"}, "We"));
    questions.add(new Question("Select the pronoun that can replace the words in caps. MY BROTHER AND HIS WIFE are going to Las Vegas.", new String[]{"We", "He", "They"}, "They"));
    questions.add(new Question("England is my _______.", new String[]{"City", "Club", "Country"}, "Country"));
    questions.add(new Question("Anna: Are you Spanish? Marco: No, _______.", new String[]{"I don't", "I isn't", "I'm not"}, "I'm not"));
    questions.add(new Question("One who hides away on a ship to optain a free passage is a __________.", new String[]{"Shipwright", "Compositor", "Stoker", "Stowaway"}, "Stowaway"));
    questions.add(new Question("When is a negative question used?", new String[]{"In a statement.", "When you expect the listener to disagree.", "To show surprise or doubt."}, "To show surprise or doubt."));
    initUI();
  }

  private void initUI() {
    statusbar = new JLabel("");
    add(statusbar, BorderLayout.SOUTH);

    add(new EasyMinesweeperBoard(statusbar, this, questions));

    setResizable(false);
    pack();

    setTitle("EasyMinesweeper");
    setLocationRelativeTo(null);
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  }

  public static void main(String[] args) {
    EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        EasyMinesweeper ex = new EasyMinesweeper();
        ex.setVisible(true);
      }
    });
  }

  public class Question {
    public String correctAnswer;
    public String[] answers;
    public String question;
    public Question(String question, String[] answers, String correctAnswer) {
      this.question = question;
      this.answers = answers;
      this.correctAnswer = correctAnswer;
    }
  }

}
