package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCircle = createDescriptorForCircle();
  /*package*/ final ConceptDescriptor myConceptColor = createDescriptorForColor();
  /*package*/ final ConceptDescriptor myConceptColorReference = createDescriptorForColorReference();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptSquare = createDescriptorForSquare();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanvas, myConceptCircle, myConceptColor, myConceptColorReference, myConceptShape, myConceptSquare);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Canvas:
        return myConceptCanvas;
      case LanguageConceptSwitch.Circle:
        return myConceptCircle;
      case LanguageConceptSwitch.Color:
        return myConceptColor;
      case LanguageConceptSwitch.ColorReference:
        return myConceptColorReference;
      case LanguageConceptSwitch.Shape:
        return myConceptShape;
      case LanguageConceptSwitch.Square:
        return myConceptSquare;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Canvas", 0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637c3ab5L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:a1a0f6b5-46ce-4cd9-9c8e-3cbb7512376f(Shapes.structure)/4846619902258985653");
    b.version(2);
    b.aggregate("shapes", 0x4342a71f637c3abaL).target(0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637c3aa0L).optional(true).ordered(true).multiple(true).origin("4846619902258985658").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCircle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Circle", 0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637c3aa1L);
    b.class_(false, false, false);
    b.super_("Shapes.structure.Shape", 0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637c3aa0L);
    b.origin("r:a1a0f6b5-46ce-4cd9-9c8e-3cbb7512376f(Shapes.structure)/4846619902258985633");
    b.version(2);
    b.property("x", 0x4342a71f637c3aa2L).type(PrimitiveTypeId.INTEGER).origin("4846619902258985634").done();
    b.property("y", 0x4342a71f637c3aa4L).type(PrimitiveTypeId.INTEGER).origin("4846619902258985636").done();
    b.property("radius", 0x4342a71f637c3aa7L).type(PrimitiveTypeId.INTEGER).origin("4846619902258985639").done();
    b.alias("circle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Color", 0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637cd22aL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:a1a0f6b5-46ce-4cd9-9c8e-3cbb7512376f(Shapes.structure)/4846619902259024426");
    b.version(2);
    b.alias("color");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColorReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "ColorReference", 0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637d0255L);
    b.class_(false, false, false);
    b.origin("r:a1a0f6b5-46ce-4cd9-9c8e-3cbb7512376f(Shapes.structure)/4846619902259036757");
    b.version(2);
    b.associate("target", 0x4342a71f637d0256L).target(0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637cd22aL).optional(false).origin("4846619902259036758").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Shape", 0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637c3aa0L);
    b.class_(false, true, false);
    b.origin("r:a1a0f6b5-46ce-4cd9-9c8e-3cbb7512376f(Shapes.structure)/4846619902258985632");
    b.version(2);
    b.aggregate("color", 0x4342a71f637d02b9L).target(0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637d0255L).optional(false).ordered(true).multiple(false).origin("4846619902259036857").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquare() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Square", 0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637c3aabL);
    b.class_(false, false, false);
    b.super_("Shapes.structure.Shape", 0x3c9c21caebe841beL, 0xa9e41ed83cae1eb6L, 0x4342a71f637c3aa0L);
    b.origin("r:a1a0f6b5-46ce-4cd9-9c8e-3cbb7512376f(Shapes.structure)/4846619902258985643");
    b.version(2);
    b.property("upperLeftX", 0x4342a71f637c3aacL).type(PrimitiveTypeId.INTEGER).origin("4846619902258985644").done();
    b.property("upperLeftY", 0x4342a71f637c3aaeL).type(PrimitiveTypeId.INTEGER).origin("4846619902258985646").done();
    b.property("size", 0x4342a71f637c3ab1L).type(PrimitiveTypeId.INTEGER).origin("4846619902258985649").done();
    b.alias("square");
    return b.create();
  }
}
